#!/bin/bash

ESTIMATED_LOAD_TIME=1.19
WINDOW_OFFSET_X=0   # horizontal position
WINDOW_OFFSET_Y=280 # vertical position
WINDOW_WIDTH=750
WINDOW_HEIGHT=500

ARGUMENTS=$@
DEBUG_MODE='off'
HTML=''
PIPED=''

# Check if the BROWSER variable is set
[[ -z "$BROWSER" ]] && echo 'variable $BROWSER is not set' && exit 1
# Check if there is piped input
[[ -p /dev/stdin ]] && export PIPED=$(cat)

# detect browser
case "$BROWSER" in
    firefox) options='--new-window' ;;
    *) options='' ;;
esac

# parse args
while [[ $# -gt 0 ]]; do
    case "$1" in
        --debug)
            export DEBUG_MODE='ON'
            shift  # Move to next argument
            ;;
        *)
        	export HTML="$HTML$1"
        	shift
        	;;
    esac
done

# Piped text takes priority over arguments
[[ -n "$HTML"  ]] && echo "$HTML" > /tmp/.html
[[ -n "$PIPED" ]] && echo "$PIPED" > /tmp/.html

# main execution

# Open the HTML in the browser
$BROWSER $options /tmp/.html &

# Wait briefly to give the browser time to open
sleep $ESTIMATED_LOAD_TIME

# Use xdotool to resize and move the window
WINDOW_ID=$(xdotool search --onlyvisible --class "$BROWSER" | head -n 1)
if [[ -n "$WINDOW_ID" ]]; then
    xdotool windowmove "$WINDOW_ID" $WINDOW_OFFSET_X $WINDOW_OFFSET_Y # Adjust Y-value based on screen resolution
    xdotool windowsize "$WINDOW_ID" $WINDOW_WIDTH $WINDOW_HEIGHT      # Set the desired width and height
fi

# debug mode

if [[ "$DEBUG_MODE" == "ON" ]]; then
    # Debugging output
    echo "DEBUG MODE: ON"
    echo "BROWSER: $BROWSER"
    echo "Arguments passed: $ARGUMENTS"
    echo "Passed HTML content: $HTML"
    echo "Piped HTML content: $PIPED"
    echo "Window position and size: X=$WINDOW_OFFSET_X, Y=$WINDOW_OFFSET_Y, Width=$WINDOW_WIDTH, Height=$WINDOW_HEIGHT"
    echo "Options for browser: $options"
fi
