#!/bin/bash

# Path to the file containing repository paths
REPOS_FILE="$HOME/repositories.txt"

yellow="\e[93m"
_0="\e[0m"
separator="********************************************************************************"
checkmark="✅"
cross="❌"

main() {
	if [[ ! -f "$REPOS_FILE" ]]; then echo "$REPOS_FILE not found. Create one."; exit 1; fi
    
    while IFS='=' read -r key value; do
        # Skip empty lines or lines that don't contain '='
        [ -z "$key" ] || [ -z "$value" ] && continue

        # Remove leading and trailing whitespace from key and value
        key=$(echo "$key" | xargs)
        value=$(echo "$value" | xargs)

        if [[ ! -d "${HOME}${value}" ]]; then echo "${HOME}${value} does not exists"; continue; fi

        check_git_status "${HOME}${value}" "$key"
  
    done < "$REPOS_FILE"
}

# Function to check if the output is empty and perform 'git status' accordingly
function check_git_status() {
    local repo_dir="$1"
    local repo_name="$2"
    local status_output=$(git -C "$repo_dir" status -s)
    
    if [[ -z "$status_output" ]]; then
        # If the output is empty, then do 'git status'
        local status_output=$(git -C "$1" status)
        if [[ $status_output == *"Your branch is up to date"* ]]; then
            # echo -e "$yellow$2: $checkmark$_0"
            printf "%-8s: %s\n" "$2" "$checkmark"
        else
            printf "%-8s: %s\n" "$2" "$cross"
            # echo -e "${yellow}$repo_name $separator${_0}"
            # git -C "$1" status
        fi
    else
        printf "%-8s: %s\n" "$2" "$cross"
        git -C "$repo_dir" status -s
    fi
}

main
