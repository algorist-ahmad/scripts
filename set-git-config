#!/bin/bash

# Run once to configure git

## user
git config --global user.name "Bytesmith Ahmad"
git config --global user.email "b-9k@outlook.com"

## config
git config --global pull.rebase true     # For a cleaner commit history (no merge)
git config --global core.editor micro    # Linux
#git config --global core.editor notepad # Windows

## aliases
git config --global alias.a       "add"
git config --global alias.aa      "add ."
git config --global alias.br      "branch"
git config --global alias.cf      "cat-file"
git config --global alias.cm      "commit"
git config --global alias.cmm     "commit -m"
git config --global alias.df      "diff"
git config --global alias.fe      "fetch"
git config --global alias.lg1     "log --all --decorate --oneline --graph"
git config --global alias.lg2     "log --graph --all --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(dim white)- %an%C(reset)%C(auto)%d%C(reset)'"
git config --global alias.lg3     "log --graph --abbrev-commit --all --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset)%C(auto)%d%C(reset)%n          %C(white)%s%C(reset) %C(dim white)- %an%C(reset)'"
git config --global alias.lg      "! git lg2"
git config --global alias.last    "log -1 HEAD"
git config --global alias.pu      "push"
git config --global alias.unstage "reset HEAD --"
git config --global alias.st      "status -s"
git config --global alias.sta     "status"
git config --global alias.sw      "switch"
git config --global alias.lo   "! f() { git log --no-color --no-decorate | bat -n -l 'Git log' ; }; f"
git config --global alias.a-c  "! git add . && git commit"
git config --global alias.send "! f() { git add . && if [[ -n \"$@\" ]]; then git commit -m \"$@\"; else git commit; fi && git push --all ; }; f $@"
git config --global alias.up   "! git remote update -p; git merge --ff-only @{u}"

## other

#loa = log --all --decorate --oneline --graph
#lod = log --decorate --oneline --graph
#lop = log -p # show history of specific file
#lor = git log --graph --decorate --oneline $(git rev-list -g --all)
#lot = log --simplify-by-decoration

echo -e "\e[33mConfigured!\e[0m
git config --global --edit     ---> view config file
git config --get-regexp ^alias ---> list aliases"
