#!/bin/bash

# Template parser, useful as example too

# source ./variables

declare -A DEFAULT=(
    [cache]="$HOME/.cache"
    [log_file]="$HOME/logfile.log"
)

declare -A FILE_PATH=(
    [config_file]="$HOME/.config/my_script/config.yml"
    [log_dir]="$HOME/logs/"
)

declare -A FLAG=(
    [error]=0
)

declare -A NAMESPACE=(
    [args]="$@"
    [debug]=0
    [create]=0
    [update]=0
    [delete]=0
    [A]=''
    [B]=''
    [C]=''
)

#########################################################

main() {
    dissect "$@"
    terminate_if_no_arg
    reveal_variables
}

dissect() {

    LAST_OPTION=''
    
    # Iterate over arguments using a while loop
    while [[ $# -gt 0 ]]; do
        case "$1" in
            create)
                NAMESPACE[create]=1 ;
                LAST_OPTION='create' ;
                shift ;  # Move to next argument
                ;;
            A)
                NAMESPACE[A]=1 ;
                LAST_OPTION='A' ;
                shift ;
                ;;
            B)
                NAMESPACE[B]=1 ;
                LAST_OPTION='B' ;
                shift ;
                ;;
            C)
                NAMESPACE[C]=1 ;
                LAST_OPTION='C' ;
                shift ;
                ;;
            *)
                # Handle unknown argument
                if [[ -z "$LAST_OPTION" ]]; then
                    echo "unknown: $1"
                else
                    NAMESPACE["$LAST_OPTION"]="${NAMESPACE[$LAST_OPTION]} $1"
                fi
                shift ;
                ;;
        esac
    done
}

terminate_if_no_arg() {
    [[ "${NAMESPACE[args]}" == "" ]] && echo 'No args received.' && exit 0
}

reveal_variables() {
    # if NAMESPACE[debug] -eq 1
    # for KEY,VALUE in NAMESPACE
    # PRINT
    echo "A: ${NAMESPACE[A]}"
    echo "B: ${NAMESPACE[B]}"
    echo "C: ${NAMESPACE[C]}"
}

main "$@"
