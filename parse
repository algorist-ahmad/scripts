#!/bin/bash

# Template parser, useful as example too

# source ./variables

declare -A DEFAULT=(
    [cache]="$HOME/.cache"
    [log_file]="$HOME/logfile.log"
)

declare -A FILE_PATH=(
    [config_file]="$HOME/.config/my_script/config.yml"
    [log_dir]="$HOME/logs/"
)

declare -A FLAG=(
    [error]=0
)

declare -A NAMESPACE=(
    [args]="$@"
    [debug]=0
    [create]=0
    [update]=0
    [delete]=0
    [A]=''
    [B]=''
    [C]=''
)

#########################################################

# try not to mess with this structure, make other functions subfunctions of these below
main() {
    initialize   # setup environment and check for missing files
    dissect "$@" # break input for analysis
    validate     # validate the operation
    dispatch     # execute the operation
    terminate    # execute post-script tasks regardless of operation
}

dissect() {

    LAST_OPTION=''
    
    # Iterate over arguments using a while loop
    while [[ $# -gt 0 ]]; do
        case "$1" in
            debug)
                NAMESPACE[debug]=1 ;
                ;;
            A)
                NAMESPACE[A]=1 ;
                LAST_OPTION='A' ;
                ;;
            B)
                NAMESPACE[B]=1 ;
                LAST_OPTION='B' ;
                ;;
            C)
                NAMESPACE[C]=1 ;
                LAST_OPTION='C' ;
                ;;
            *)
                # Handle unknown argument
                if [[ -z "$LAST_OPTION" ]]; then
                    echo "unknown: $1"
                else
                    NAMESPACE["$LAST_OPTION"]="${NAMESPACE[$LAST_OPTION]} $1"
                fi
                ;;
        esac
        # discard argument
        shift
    done
}

terminate_if_no_arg() {
    [[ "${NAMESPACE[args]}" == "" ]] && echo 'No args received.' && exit 0
}

reveal_variables() {
    if [[ NAMESPACE['debug'] -eq 1 ]]; then
        # Loop through the keys of the associative array and print key-value pairs
        for key in "${!NAMESPACE[@]}"; do
            echo "Key: $key, Value: ${NAMESPACE[$key]}"
        done
    fi
}

main "$@"
