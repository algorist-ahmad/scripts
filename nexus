#!/bin/bash

ARGS="$@"
ARG_COUNT=$#
DATA= # cache json file for the execution of the program
COMMIT_MSG="committed via script: nexus"

dir_list='eza --header --all --long --icons --no-permissions --no-user --git --git-repos --total-size --time-style=relative --sort Name --hyperlink'

declare -a modules=(
  'task'
  'pass'
  '../nexus'
)

main() {
  init
  jq -c '.' $DATA
  execute
  terminate
}

init() {
  # create data file
  DATA=$(mktemp --suffix .json)
  # update data file
  parse $ARGS > $DATA
  # ...
  _set_conditional push false
  _set_conditional pull false
  # change directry
  cd $NEXUS
}

execute() {
  [[ $ARG_COUNT -eq 0 ]] &&  $dir_list
  if _true $(_get push); then git_push_nexus; fi
  if _true $(_get pull); then git_pull_nexus; fi
  if ! _null $(_get unknown); then echo "huh? $(_get unknown)?"; fi
}

terminate() {
  :
}

git_push_nexus() {
  for module in "${modules[@]}"; do
    cd "$NEXUS/$module"
    echo -n "$module: "
    git add .
    git commit -qm "$COMMIT_MSG" >/dev/null
    git push
  done
}

git_pull_nexus() {
  for module in "${modules[@]}"; do
    cd "$NEXUS/$module"
    echo -n "$module: "
    git pull
  done
}

_set_conditional() {
  tmp=$(mktemp)
  jq "if .args.parsed | has(\"$1\") then . else .args.parsed += {\"$1\": $2} end" "$DATA" > "$tmp"
  mv "$tmp" "$DATA"
}

_set() {
  tmp=$(mktemp)
  jq ".args.parsed.$1 = $2" $DATA > $tmp
  mv $tmp $DATA
}

_get() {
  jq -r ".args.parsed.$1" $DATA
}

_true() {
  [[ "$1" == 'true' ]]
}

_null() {
  [[ "$1" == 'null' ]]
}

main "$@"
